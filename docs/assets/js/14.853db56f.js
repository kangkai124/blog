(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{160:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),a("p",[t._v("作者："),a("a",{attrs:{href:"https://juejin.im/user/597620755188256705615451",target:"_blank",rel:"noopener noreferrer"}},[t._v("YYJay"),a("OutboundLink")],1)]),a("p",[t._v("背景: 一次偶然的机会看到了其它项目组强大的GitLab流水线, 想起自己每天还要手动打镜像做一些重复性工作,瞬间眼红. 这不就是我想要的流水线吗.凑巧项目组决定把代码迁移到公司的机器上, 那就借着这个机会把gitlab弄完整吧.")]),t._m(1),t._m(2),a("p",[t._v("YAML")]),t._m(3),a("p",[t._v("YAML")]),a("p",[t._v("官方教程")]),t._m(4),a("ul",[a("li",[a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fdocs.gitlab.com%2Fce%2Fci%2Frunners%2FREADME.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitlab-runner"),a("OutboundLink")],1)])]),a("p",[t._v("Gitlab-runner")]),t._m(5),t._m(6),t._m(7),a("p",[t._v("Pipelines")]),a("p",[t._v("stages")]),a("p",[t._v("jobs")]),t._m(8),t._m(9),a("p",[t._v("在这次搭建过程中, 我使用的是ubuntu虚拟机, 进入虚拟机一套命令下来之后,也就安装得差不多了,大部分时间还是在谷歌以及尝试各种方法 。比较几个教程之后, 也找到了比较适合我的"),a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000011632220%23articleHeader2",target:"_blank",rel:"noopener noreferrer"}},[t._v("方法"),a("OutboundLink")],1),t._v("。")]),t._m(10),a("p",[t._v("接下来通过域名就可以访问我们的GitLab了, 第一次访问会要求初始化管理员密码, 设置完成之后, 系统会重定向到登录页面, 默认管理员账号为root, 登录之后, 就可以修改管理员账号为自己喜欢的账号了")]),a("p",[t._v("2.安装gitlab-runner")]),a("p",[t._v("最初安装时,我选用了官方提供的"),a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fdocs.gitlab.com%2Frunner%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装方法"),a("OutboundLink")],1),t._v(", 一顿操作之后, 发现并不好用(一定是我打开的方式不对).于是我默默打开了万能的谷歌, 最后选择了安装gitlab-ci-multi-runner.这里依然还是一堆命令,默默等待它下载吧.详细介绍参考这位网友的"),a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000007180257",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),a("OutboundLink")],1)]),t._m(11),a("p",[t._v("在第3步注册过程中, 会填一些信息,按提示一直往下走就行了,其中toker可以在我们的gitlab管理员主页获得 ip/admin/runners.")]),t._m(12),a("p",[t._v("配置完成之后, 还需要在页面底部编辑runner, 将runner 与项目关联,关联之后才能运行流水线.")]),t._m(13),t._m(14),t._m(15),t._m(16),a("p",[t._v("安装GitLab时, 遇到错误")]),t._m(17),a("p",[t._v("在全栈leader的指导下, 修改/etc/default/locale文件, 添加以下两行配置重启之后果然很香.")]),t._m(18),a("p",[t._v("还有就是docker in docker 的问题, 在runner中每次都安装一个docker显然不太现实, 所以我们用了外部docker的方式, GitLab官方也给出了相应"),a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fdocs.gitlab.com%2Fee%2Fci%2Fdocker%2Fusing_docker_build.html%23use-docker-socket-binding",target:"_blank",rel:"noopener noreferrer"}},[t._v("教程"),a("OutboundLink")],1),t._v(".")]),a("p",[t._v("在安装过程中, 下载部分资源非常慢, 一定要切换到国内镜像源!!!附上中国科技大学的镜像源")]),t._m(19),t._m(20),a("p",[t._v('这次的gitlab流水线搭建之旅, 在leader以及几位运维同事的帮助下, 也算是基本能用了,由于知识面太窄, 过程中大部分时间都在查资料看文档,不断测试.确实是开卷有益, 想起了高中物理老师说的那句话:"多读点书总不可能把人读坏吧".')]),a("p",[t._v("整个流程弄下来发现并不是太难,命令也不多.但在安装之前,需要靠自己网上去搜各种教程, 中途也会出现千奇百怪的错误,每个步骤都可以单独出一个教程.我们需要一篇篇看完教程,甄选出最适合自己的.这是最花费时间的地方.另一个比较费时间的点就是测试和安装依赖, 有时可能会花费1个小时的时间去等待下载, 最后发现,下载失败,啊哈哈哈哈.")]),a("blockquote",[a("p",[t._v("原文链接："),a("a",{attrs:{href:"https://juejin.im/post/5b67b5d6e51d4519721be7c0",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5b67b5d6e51d4519721be7c0"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"记录一条属于自己的gitlab流水线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记录一条属于自己的gitlab流水线","aria-hidden":"true"}},[this._v("#")]),this._v(" 记录一条属于自己的gitlab流水线")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"名词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#名词","aria-hidden":"true"}},[this._v("#")]),this._v(" 名词:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v(".gitlab-ci.yml")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[this._v(".gitlab"),s("span",{attrs:{class:"token punctuation"}},[this._v("-")]),this._v("ci.yml\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stable\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("before_script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" echo http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//mirrors.ustc.edu.cn/alpine/v3.6/main "),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/apk/repositories; echo http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//mirrors.ustc.edu.cn/alpine/v3.6/community "),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/apk/repositories\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apk update\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apk add "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("update git bash\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker login "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("u yourName "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p yourPas yourDockerIp\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build_docker\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cleanup_build\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("allow_failure")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apk add "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("update nodejs nodejs"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("npm\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry=http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.130.131"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("9090")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm test\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" branches\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("build_docker")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build_docker\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("retry")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apk add bash\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bash build"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docker.sh\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dev\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /^hotfixes"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\\d.\\d.\\d$/\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("cleanup_build_dicker")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cleanup_build\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("retry")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("when")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" on_failure\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CI_COMMIT_REF_NAME=$"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CI_COMMIT_REF_NAME"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" bash build"),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docker.sh\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" branches\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dev\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n复制代码\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".gitlab-ci.yml\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Pipelines")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".gitlab-ci.yml\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".gitlab-ci.yml\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"下面我们开始正式安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下面我们开始正式安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 下面我们开始正式安装")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ubuntu\n\n添加 GitLab 镜像源并安装curl -sS http://packages.gitlab.com.cn/install/gitlab-ce/script.rpm.sh "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" gitlab-ce\n配置并启动 GitLab\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-ctl reconfigure复制代码\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("1.添加Gitlab的官方源：\n"),a("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bash")]),t._v("\n2.安装\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" gitlab-ci-multi-runner\n3.注册\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-ci-multi-runner registe\nPlease enter the gitlab-ci coordinator URL "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e.g. https://gitlab.com "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhttps://mygitlab.com/ci\nPlease enter the gitlab-ci token "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner\nxxx-xxx-xxx\nPlease enter the gitlab-ci description "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner\nmy-runner\nINFO"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0034"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" fcf5c619 Registering runner"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". succeeded\nPlease enter the executor: shell, docker, docker-ssh, ssh?\ndocker\nPlease enter the Docker image "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eg. ruby:2.1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\nnode:4.5.0\nINFO"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0037"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Runner registered successfully. Feel "),a("span",{attrs:{class:"token function"}},[t._v("free")]),t._v(" to start it, but "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it's\nrunning already the config should be automatically reloaded"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("\n复制代码\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/6/1650e70a2d06e0ff?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/6/1650e748bf74f2d5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("至此, 我们离配置runner还差最后一步:为项目设置runner.进入项目的CI/CD设置界面(Settings => CI/CD => Runners), 找到刚刚关联好的runner, 激活即可."),s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/6/1650e7acd9a41d88?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("完成这步之后, 项目就可以顺利开始跑流水线啦.当项目分支有代码更新时, 就能看到我们在.gitlab-ci-yml中定义好的任务当前所处状态."),s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/6/1650e80c371cbcc5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"遇到的坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到的坑","aria-hidden":"true"}},[this._v("#")]),this._v(" 遇到的坑:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("There was an error running gitlab-ctl reconfigure:\n\nexecute"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("postgresql::enable line 80"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" with "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", but received "),a("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n---- Begin output of /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 ----\nSTDOUT: The files belonging to this database system will be owned by user "),a("span",{attrs:{class:"token string"}},[t._v('"gitlab-psql"')]),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\nThis user must also own the server process.\nSTDERR: initdb: invalid locale settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" check LANG and LC_* environment variables\n---- End output of /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 ----\nRan /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 returned 1复制代码\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[this._v("LC_CTYPE"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"en_US.UTF-8"')]),this._v("\nLC_ALL"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"en_US.UTF-8"')]),this._v("复制代码\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" http://mirrors.ustc.edu.cn/alpine/v3.6/main "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/apk/repositories"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" http://mirrors.ustc.edu.cn/alpine/v3.6/community "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/apk/repositories\n复制代码\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结:")])}],!1,null,null,null);s.default=e.exports}}]);