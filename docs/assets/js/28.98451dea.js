(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{174:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("由 "),n("a",{attrs:{href:"https://github.com/kangkai124/blog/issues/12",target:"_blank",rel:"noopener noreferrer"}},[t._v("每天一道题，早日 BAT"),n("OutboundLink")],1),t._v(" 第 6 题引发的深入学习，感谢 "),n("a",{attrs:{href:"https://github.com/camsong/blog/issues/9",target:"_blank",rel:"noopener noreferrer"}},[t._v("大佬博客"),n("OutboundLink")],1),t._v("。")]),n("p",[t._v("JavaScript 中所有数字包括整数和小数都只有一种类型 — "),n("code",[t._v("Number")]),t._v(",它的实现遵循 "),n("a",{attrs:{href:"http://grouper.ieee.org/groups/754/",target:"_blank",rel:"noopener noreferrer"}},[t._v("IEEE 754"),n("OutboundLink")],1),t._v(" 标准，使用 64 位固定长度来表示，也就是标准的 double 双精度浮点数。")]),t._m(1),n("p",[t._v("64位比特又可分为三个部分：")]),t._m(2),n("p",[n("a",{attrs:{href:"https://user-images.githubusercontent.com/17745492/55932586-dca41c00-5c5c-11e9-8e29-2530a404e01b.png",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://user-images.githubusercontent.com/17745492/55932586-dca41c00-5c5c-11e9-8e29-2530a404e01b.png",alt:"js-number"}}),n("OutboundLink")],1)]),n("p",[n("a",{attrs:{href:"https://user-images.githubusercontent.com/17745492/55933455-eaa76c00-5c5f-11e9-8243-75268b68b92a.png",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://user-images.githubusercontent.com/17745492/55933455-eaa76c00-5c5f-11e9-8243-75268b68b92a.png",alt:"image"}}),n("OutboundLink")],1),t._v("\n因为二进制的科学计数法，小数点前一位只能是 "),n("code",[t._v("1")]),t._v("，因此只取小数点后面的数作为 M 省略。")]),t._m(3),n("p",[n("code",[t._v("4.5")]),t._v(" 转为二进制是 "),n("code",[t._v("100.1")]),t._v(" （"),n("a",{attrs:{href:"https://www.cnblogs.com/xkfz007/articles/2590472.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("十进制转二进制"),n("OutboundLink")],1),t._v("）")]),t._m(4),t._m(5),t._m(6),n("p",[n("a",{attrs:{href:"https://user-images.githubusercontent.com/17745492/55934272-a4074100-5c62-11e9-8334-0b3c3ea06d1e.png",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://user-images.githubusercontent.com/17745492/55934272-a4074100-5c62-11e9-8334-0b3c3ea06d1e.png",alt:"image"}}),n("OutboundLink")],1)]),n("p",[t._v("这里是一个"),n("a",{attrs:{href:"http://www.binaryconvert.com/result_double.html?decimal=052046053",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线转换工具"),n("OutboundLink")],1)]),t._m(7),t._m(8),t._m(9),t._m(10),n("p",[n("a",{attrs:{href:"https://user-images.githubusercontent.com/17745492/55944250-cc029e80-5c7a-11e9-90bf-b6a5ac9871e0.png",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://user-images.githubusercontent.com/17745492/55944250-cc029e80-5c7a-11e9-90bf-b6a5ac9871e0.png",alt:"image"}}),n("OutboundLink")],1)]),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"javascript-的精确计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的精确计算","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript 的精确计算")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这样的存储结构"),s("strong",[this._v("优点")]),this._v("是可以归一化处理整数和小数，节省存储空间。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数")]),s("li",[this._v("指数位E：中间的 11 位存储指数（exponent），用来表示次方数")]),s("li",[this._v("尾数位M：最后的 52 位是尾数（mantissa），超出的部分"),s("strong",[this._v("自动进一舍零")]),this._v("（划重点）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("例1 4.5")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("科学计数法表示是 "),s("code",[this._v("1.001 * 2 ^ 2")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("4.5` = `1 * 2 ^ 2 * 1.001\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("所以 "),s("code",[this._v("4.5")]),this._v(" 最终表示为**（S=0，E=1025，M=001）**，没有丢精度")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("例2 0.1")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("0.1")]),this._v(" 转为二进制是 "),s("code",[this._v("0.00011001100110011")]),this._v("(0011循环)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("科学计数法表示是 "),s("code",[this._v("1.1001100110011... * 2 ^ -4")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("注意，转为 64 位比特存储时，由于 M 只有 52 位，所以无限循环的部分最后会有"),s("strong",[this._v("舍入")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("0.1` = `1 * 2 ^ -4 * 1.1001100110011001100110011001100110011001100110011010\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("所以 "),s("code",[this._v("0.1")]),this._v(" 最终表示为**（S=0，E=1019，M=1001100110011001100110011001100110011001100110011010"),s("code",[this._v("）**，转换为十进制后为")]),this._v("0.100000000000000005551115123126`，丢失了精度。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("例3 0.1+0.2 = 0.30000000000000004")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("0.1")]),this._v(" + "),s("code",[this._v("0.2")]),this._v(" 都转为二进制后再运算")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("0.00011001100110011001100110011001100110011001100110011010 +\n0.0011001100110011001100110011001100110011001100110011010 =\n0.0100110011001100110011001100110011001100110011001100111\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("转为十进制正好是 "),s("code",[this._v("0.30000000000000004")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/**\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\n */")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 把错误的数据转正\n * strip(0.09999999999999998)=0.1\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("strip")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" precision "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("12")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token function"}},[t._v("parseFloat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toPrecision")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("precision"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * Return digits length of a number\n * @param {*number} num Input number\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Get digit length of e")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eSplit "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("split")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token regex"}},[t._v("/[eE]/")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eSplit"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("split")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'.'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eSplit"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" len "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" len "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\n * @param {*number} num 输入数\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("float2Fixed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'e'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replace")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'.'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dLen "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dLen "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("strip")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dLen"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" num"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 检测数字是否越界，如果越界给出提示\n * @param {*number} num 输入数\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("checkBoundary")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_boundaryCheckingState"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Number"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" num "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Number"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token constant"}},[t._v("MIN_SAFE_INTEGER")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("warn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("num"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v(" is beyond boundary when transfer to integer, the results may not be accurate`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 精确乘法\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" others"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("slice")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1Changed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("float2Fixed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num2Changed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("float2Fixed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" baseNum "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" leftValue "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1Changed "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" num2Changed"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token function"}},[t._v("checkBoundary")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftValue"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" leftValue "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 精确加法\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("plus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("plus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("plus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" others"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("slice")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" baseNum "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("max")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 精确减法\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("minus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("minus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("minus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" others"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("slice")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" baseNum "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("max")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" baseNum"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 精确除法\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("divide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("divide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("divide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" others"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("others"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("slice")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1Changed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("float2Fixed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num2Changed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("float2Fixed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("checkBoundary")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1Changed"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("checkBoundary")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2Changed"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1Changed "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" num2Changed"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitLength")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 四舍五入\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("round")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ratio"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" base "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("pow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ratio"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("divide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("round")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("times")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _boundaryCheckingState "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * 是否进行边界检查，默认开启\n * @param flag 标记开关，true 为开启，false 为关闭，默认为 true\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("enableBoundaryChecking")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  _boundaryCheckingState "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" flag"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" strip"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plus"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" minus"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" times"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" divide"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" round"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" digitLength"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float2Fixed"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enableBoundaryChecking "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" strip"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plus"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" minus"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" times"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" divide"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" round"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" digitLength"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float2Fixed"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enableBoundaryChecking "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);s.default=o.exports}}]);